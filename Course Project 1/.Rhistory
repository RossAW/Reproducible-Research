RawData<- read.csv("activity.csv",header = TRUE)
View(RawData)
?hist
ggplot(data = RawData, aes(steps))+ geom_histogram()
library(ggplot2)
```
print(HistStepsPerDay)
HistStepsPerDay<-ggplot(data = RawData, aes(steps)) + geom_histogram()
print(HistStepsPerDay)
?group_by
library(dplyr)
?group_by
?mean
?summarise
groupedData<-group_by(RawData,date)
DailyStepMean<-summarise_each(groupedData,funs(mean(steps)))
View(DailyStepMean)
HistStepsPerDay<-ggplot(data = DailyStepMean, aes(steps)) + geom_histogram()
print(HistStepsPerDay)
oneDay<-RawData[RawData$date=="2012-10-03",2]
head(oneDay)
oneDay<-RawData[RawData$date==2012-10-03,2]
oneDay<-RawData$date
class(oneDay)
class(RawData$steps)
class(RawData$interval)
RawData$date<-as.date(RawData$date)
?as.Date
RawData$date<-as.Date(RawData$date)
View(RawData)
class(RawData$date)
oneDay<-RawData[RawData$date==2012-10-03,2]
oneDay<-RawData[RawData$date=="2012-10-03",2]
oneDay<-RawData[RawData$date=="2012-10-03",1]
table(oneDay)
hist(oneDay)
mean(oneDay)
RawData$date<-as.Date(RawData$date)
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
```{r}
RawData<- read.csv("activity.csv",header = TRUE)
RawData
```
The date data is of the "factor" class. To make things a bit easier I am going to change the class to "Date".
```{r}
RawData$date<-as.Date(RawData$date)
```
## What is mean total number of steps taken per day?
```{r}
library(ggplot2)
library(dplyr)
groupedData<-group_by(RawData,date)
DailyStepMean<-summarise_each(groupedData,funs(mean(steps)))
#groupedData<-group_by(MeanSTDData,Subject,Activity)
#outputData<-summarise_each(groupedData,funs(mean))
HistStepsPerDay<-ggplot(data = DailyStepMean, aes(steps)) + geom_histogram()
print(HistStepsPerDay)
```
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
class(RawData)
class(RawData$steps)
class(RawData$date)
?sum
source('~/.active-rstudio-document', echo=TRUE)
View(DailyStepTotal)
source('~/.active-rstudio-document', echo=TRUE)
MeanStepsPerInterval<-summarise_each(group_by(RawData,interval),funs(mean(steps)))
View(MeanStepsPerInterval)
MeanStepsPerInterval<-summarise_each(group_by(RawData,interval),funs(mean(steps,na.rm = TRUE)))
View(MeanStepsPerInterval)
plotMeanIntervalPattern<-ggplot(data = MeanStepsPerInterval, aes(interval,steps))
print(plotMeanIntervalPattern)
print(plotMeanIntervalPattern)
plotMeanIntervalPattern<-ggplot(data = MeanStepsPerInterval, aes(interval,steps))
print(plotMeanIntervalPattern)
?"ggplot"
source('~/.active-rstudio-document', echo=TRUE)
?max
MeanStepsPerInterval[MeanStepsPerInterval$steps==max(MeanStepsPerInterval$steps),1]
source('~/.active-rstudio-document', echo=TRUE)
class(MostActiveInterval)
MostActiveInterval[1,1]
MostActiveInterval[1]
MostActiveInterval[1,2]
?count
sum(is.na(RawData$steps))
is.na(RawData)
source('~/.active-rstudio-document', echo=TRUE)
?geom_histogram
source('~/.active-rstudio-document', echo=TRUE)
View(RawData)
17568/288
?cbind
aa<-cbind(MeanStepsPerInterval,MeanStepsPerInterval)
View(aa)
aa<-rbind(MeanStepsPerInterval,MeanStepsPerInterval)
for (i in 1:61){
for (i in 1:61){
LargeMeanStepsPerInterval<-rcbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
for (i in 1:61){
LargeMeanStepsPerInterval<-rcbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
for (i in 1:61){
LargeMeanStepsPerInterval<-rcbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
for (i in 1:61){
LargeMeanStepsPerInterval<-rcbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
for (i in 1:61){
LargeMeanStepsPerInterval<-rbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
LargeMeanStepsPerInterval<-MeanStepsPerInterval
for (i in 1:61){
LargeMeanStepsPerInterval<-rbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
View(LargeMeanStepsPerInterval)
View(MeanStepsPerInterval)
table(MeanStepsPerInterval)
str(MeanStepsPerInterval)
View(RawData)
tail(RawData)
tail(LargeMeanStepsPerInterval)
17568-17856
LargeMeanStepsPerInterval<-MeanStepsPerInterval
for (i in 0:61){
LargeMeanStepsPerInterval<-rbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
18144/288
LargeMeanStepsPerInterval<-MeanStepsPerInterval
for (i in 1:61){
LargeMeanStepsPerInterval<-rbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
LargeMeanStepsPerInterval<-MeanStepsPerInterval
for (i in 1:60){
LargeMeanStepsPerInterval<-rbind(LargeMeanStepsPerInterval,MeanStepsPerInterval)
}
#RawDataMinusNAs<-RawData
#NALocations<-is.na(RawData$steps)
#RawDataMinusNAs[NALocations,1]<-
source('~/.active-rstudio-document', echo=TRUE)
View(RawDataMinusNAs)
count(is.na(RawDataMinusNAs$steps))
sum(is.na(RawDataMinusNAs$steps))
source('~/.active-rstudio-document', echo=TRUE)
?replace()
NoNAs<-replace(RawData$steps,NALocations,MeanStepsPerInterval$steps)
all.equal(RawDataMinusNAs$steps,NoNAs)
source('~/.active-rstudio-document', echo=TRUE)
remove(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
remove(list = ls())
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
summary(ModifiedDailyStepTotal$steps)
length(unique(ModifiedDailyStepTotal$steps))
?weekdays
View(RawDataMinusNAs)
weekdays(RawDataMinusNAs$date)
RawDataMinusNAs$Weekday<-weekdays(RawDataMinusNAs$date)
View(RawData)
View(RawDataMinusNAs)
source('~/.active-rstudio-document', echo=TRUE)
12960+4608
View(WeekdayData)
table(WeekdayData$Weekday)
table(WeekendData$Weekday)
source('~/.active-rstudio-document', echo=TRUE)
View(MeanWeekdayData)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)
ggplot(RawDataMinusNAs, aes(interval, step, color=factor(Weekday)))+geom_point()
ggplot(RawDataMinusNAs, aes(interval, steps, color=factor(Weekday)))+geom_point()
ggplot(RawDataMinusNAs, aes(interval, steps, color=factor(Weekday)))+geom_line()
source('~/.active-rstudio-document', echo=TRUE)
base<-ggplot(MeanWeekendData,aes(interval,steps))+geom_line()
base+geom_line(MeanWeekdayData,aes(interval,steps))
base+geom_line(data = MeanWeekdayData)
base<-ggplot(MeanWeekendData,aes(interval,steps))+geom_line(color = "blue")
base+geom_line(data = MeanWeekdayData, color ="red")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(MeanWeekdayData)
?"ggplot"
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
MeanWeekendData$Weekday<-Weekday
MeanWeekendData$Weekday<-"Weekday"
View(MeanWeekendData)
?facet_grid
source('~/.active-rstudio-document', echo=TRUE)
WeekdayComparisionPlot
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)+ coord_fixed(ratio = 10)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)+ coord_fixed(ratio = 100)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)+ coord_fixed(ratio = 0.5)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)+ coord_fixed(ratio = 0.1)
ggplot(RawDataMinusNAs,aes(interval,steps))+geom_line(color="aquamarine4")+facet_wrap(~Weekday, ncol = 1)+ coord_fixed(ratio = 1)
TotalStepsByWeekday<-summarise_each(group_by(MeanDayComparisonData,Weekday),funs(sum(steps)))
library(ggplot2)
library(dplyr)
TotalStepsByWeekday<-summarise_each(group_by(MeanDayComparisonData,Weekday),funs(sum(steps)))
View(TotalStepsByWeekday)
TotalStepsByWeekday<-summarise(group_by(MeanDayComparisonData,Weekday),funs(sum(steps)))
source('~/.active-rstudio-document', echo=TRUE)
View(TotalStepsByWeekday)
